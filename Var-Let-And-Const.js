//  Defarence of var, Let and Const

                // *****  var:
// i) var হলো ES5 (ECMAScript 5) এর একটি ভেরিয়েবল ডিক্লেয়ারেশন কীওয়ার্ড।
// ii) var এর স্কোপ (scope) হলো ফাংশন স্কোপ বা গ্লোবাল স্কোপ।
// iii) var ডিক্লেয়ার করা হলে সে ইউজ করা যায় ফাংশনের বাইরে বা বাইরের স্কোপে।
// iv) এটি হোস্ট করে (hoisted)।

// ১. স্কোপের পরিবর্তন:
// var example
var x = 10;
if (true) {
    var x = 20;
    console.log(x); // Output: 20
}
console.log(x); // Output: 20

// let example
let y = 10;
if (true) {
    let y = 20;
    console.log(y); // Output: 20
}
console.log(y); // Output: 10

// v) এখানে, var দিয়ে ডিক্লেয়ার করা ভেরিয়েবল স্কোপের বাহিরে ও স্কোপের ভিতরে একই নামের আরগুমেন্ট ডিক্লেয়ার করা হলে একই ভ্যালুতে পরিবর্তন হয়।
// vi)  let দিয়ে ডিক্লেয়ার করা ভেরিয়েবল স্কোপের বাহিরে এবং স্কোপের ভিতরে আলাদা হিসেবে কাজ করে এবং ভ্যালুতে পরিবর্তন ঘটলে স্কোপের বাহিরের ভেরিয়েবলে প্রভাব ফেলে না।


                    // ***  let:
// i) let হলো ES6 (ECMAScript 2015) এ যুক্ত হওয়া একটি নতুন ভেরিয়েবল ডিক্লেয়ারেশন কীওয়ার্ড।
// ii) let এর স্কোপ হলো ব্লক স্কোপ।
// iii) ব্লক স্কোপ মানে এটি ডিক্লেয়ার করা হলে সেই ব্লকের মধ্যেই সীমাবদ্ধ থাকবে।
// iv) let ডিক্লেয়ার করা হলে সেটির ভ্যালু পরিবর্তন করা যায়, কিন্তু সেটির রিডিমেইনিং অনুমোদিত নয়।
// v) এটি হোস্ট করা হয় কিন্তু ইনিশিয়েলাইজ হয় না।

// ২. হোস্টিং (Hoisting):
console.log(a); // Output: undefined
var a = 5;

console.log(b); // Output: ReferenceError: Cannot access 'b' before initialization
let b = 10;

console.log(c); // Output: ReferenceError: Cannot access 'c' before initialization
const c = 15;

// vi) var ডিক্লেয়ারেশন হোস্ট হয় এবং ইনিশিয়েলাইজেশন অংশ হোস্ট না হওয়া সত্ত্বেও undefined হিসেবে রিটার্ন করে।
// vii) let এবং const হোস্ট হয় না, এবং ইনিশিয়েলাইজেশন না হওয়া পর্যন্ত তারা ব্যবহৃত হতে পারে না।


                //***** const:
// i) const হলো স্থির (constant) ভেরিয়েবল ডিক্লেয়ারেশন কীওয়ার্ড।
// ii) const এর স্কোপ হলো ব্লক স্কোপ।
// iii) এটি একবার ইনিশিয়েলাইজ করা হয় এবং পরে পরিবর্তন করা যায় না।
// iv) এটিও ব্লক স্কোপ মেয়াদ পরিবর্তন করে না।
// v) এটি হোস্ট করা হয় কিন্তু ইনিশিয়েলাইজ হয়।

// ৩. মান পরিবর্তনের অনুমতি:
// var example
var x = 10;
x = 20;
console.log(x); // Output: 20

// const example
const y = 10;
y = 20; // TypeError: Assignment to constant variable.

// vi) var এবং let দিয়ে ডিক্লেয়ার করা ভেরিয়েবলে মান পরিবর্তন করা যায়।
// vii) const দিয়ে ডিক্লেয়ার করা ভেরিয়েবলে মান পরিবর্তন করা যায় না।


// সংক্ষেপে বলতে গেলে, var হলো গ্লোবাল বা ফাংশন স্কোপ ভেরিয়েবল, let হলো ব্লক স্কোপ এবং পরিবর্তনশীল ভেরিয়েবল, এবং const হলো ব্লক স্কোপ এবং অবিচ্ছিন্ন ভ্যালু স্থায়ী ভেরিয়েবল।